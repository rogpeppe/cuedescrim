
/home/rogpeppe/other/schemastore/src/schemas/json/bun-lock.cue:87:1: #BunLockFilePackageArray
0: /home/rogpeppe/other/schemastore/src/schemas/json/bun-lock.cue:87:38: [string, string, {}, string, ...]
1: /home/rogpeppe/other/schemastore/src/schemas/json/bun-lock.cue:87:133: [string, {}, ...]
2: /home/rogpeppe/other/schemastore/src/schemas/json/bun-lock.cue:87:206: [string, ...]
3: /home/rogpeppe/other/schemastore/src/schemas/json/bun-lock.cue:87:251: [string, {}, string, ...]
4: /home/rogpeppe/other/schemastore/src/schemas/json/bun-lock.cue:87:335: [string, {}, ...]
discriminate {0, 1, 2, 3, 4} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4})

/home/rogpeppe/other/schemastore/src/schemas/json/bunfig.cue:95:2: test.coverageThreshold
0: /home/rogpeppe/other/schemastore/src/schemas/json/bunfig.cue:95:33: int
1: /home/rogpeppe/other/schemastore/src/schemas/json/bunfig.cue:95:38: number
2: /home/rogpeppe/other/schemastore/src/schemas/json/bunfig.cue:95:46: {}
discriminate {0, 1, 2} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/cargo-make.cue:386:2: #task.install_crate
0: /home/rogpeppe/other/schemastore/src/schemas/json/cargo-make.cue:386:29: bool
1: /home/rogpeppe/other/schemastore/src/schemas/json/cargo-make.cue:386:35: string
2: /home/rogpeppe/other/schemastore/src/schemas/json/cargo-make.cue:386:43: {
	crate_name!: string
	binary!:     string
	test_arg!: matchN(1, [string, [...string]])
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/cargo-make.cue:421:6: {
	rustup_component_name!: string
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/cargo-make.cue:438:6: {
	crate_name!:  string
	min_version!: =~"^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
}
discriminate {0, 1, 2, 3, 4} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind struct: {2, 3, 4}
	discriminate {2, 3, 4} {
		----- PATH crate_name
		values:
		kinds:
			string: {2, 4}
		----- PATH binary
		values:
		kinds:
			string: {2}
		----- PATH test_arg
		values:
		kinds:
			string: {2}
			bytes: {2}
			list: {2}
			struct: {2}
			null: {2}
			bool: {2}
			int: {2}
			float: {2}
		----- PATH rustup_component_name
		values:
		kinds:
			string: {3}
		----- PATH min_version
		values:
		kinds:
			string: {4}
		no pure discriminator found; trying existence checks; selected {2, 3, 4}
		----- PATH crate_name {3}; possible {2, 3, 4}
		----- PATH binary {3, 4}; possible {2, 3, 4}
		it's possible!
		----- PATH test_arg {3, 4}; possible {3, 4}
		it's possible!
		nothing removed
		----- PATH rustup_component_name {2, 4}; possible {3, 4}
		it's possible!
		----- PATH min_version {2, 3}; possible {4}
		it's possible!
	} -> *cuediscrim.FieldAbsenceNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case bool:
	choose({0})
case string:
	choose({1})
case struct:
	allOf {
		notPresent(binary) -> {3, 4}
		notPresent(min_version) -> {2, 3}
		notPresent(rustup_component_name) -> {2, 4}
	}
}

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:47:2: scripts
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:47:23: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:49:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:55:2: styles
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:55:22: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:57:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:63:2: json
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:63:20: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:65:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:71:2: images
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:71:22: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:73:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:79:2: fonts
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:79:21: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:81:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:88:2: files
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:88:21: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:90:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:97:2: dependencies
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:97:28: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:99:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:106:2: locals
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:106:22: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:108:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:115:2: remotes
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:115:23: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:117:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:122:2: paths
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:122:21: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:124:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:129:2: templates
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:129:25: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:131:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:47:2: _schema.scripts
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:47:23: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:49:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:55:2: _schema.styles
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:55:22: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:57:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:63:2: _schema.json
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:63:20: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:65:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:71:2: _schema.images
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:71:22: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:73:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:79:2: _schema.fonts
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:79:21: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:81:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:88:2: _schema.files
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:88:21: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:90:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:97:2: _schema.dependencies
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:97:28: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:99:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:106:2: _schema.locals
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:106:22: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:108:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:115:2: _schema.remotes
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:115:23: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:117:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:122:2: _schema.paths
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:122:21: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:124:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/component.cue:129:2: _schema.templates
0: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:129:25: [string | {}, ...string | {}]
1: /home/rogpeppe/other/schemastore/src/schemas/json/component.cue:131:6: struct.MinFields(1) & close({
	[string]: string
})
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:42:4: #."on_map-array"
0: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:42:31: [...]
1: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:42:50: [...string]
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:157:2: #Plugin.on_map
0: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:157:22: {}
1: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:42:31: [...]
2: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:42:50: [...string]
3: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:52:32: =~"^[nvxsomilct]+$"
4: /home/rogpeppe/other/schemastore/src/schemas/json/dein.cue:52:74: string
discriminate {0, 1, 2, 3, 4} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4})

/home/rogpeppe/other/schemastore/src/schemas/json/function.cue:140:1: #httpBinding
0: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:140:26: null
1: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:140:33: bool
2: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:140:40: number
3: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:140:49: string
4: -: [...]
5: -: {}
6: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:155:4: null
7: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:155:11: bool
8: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:155:18: number
9: /home/rogpeppe/other/schemastore/src/schemas/json/function.cue:155:27: string
10: -: [...]
11: -: {}
discriminate {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11})

/home/rogpeppe/other/schemastore/src/schemas/json/github-workflow.cue:312:1: #matrix
0: /home/rogpeppe/other/schemastore/src/schemas/json/github-workflow.cue:312:21: struct.MinFields(1) & close({
	{
		[=~"^(in|ex)clude$"]: matchN(1, [#expressionSyntax, [...close({
			[string]: #configuration
		})] & [_, ...]])
	}
	{
		[!~"^(in|ex)clude$" & !~"^()$"]: matchN(1, [[...#configuration] & [_, ...], #expressionSyntax])
	}
})
1: /home/rogpeppe/other/schemastore/src/schemas/json/github-workflow.cue:318:5: =~"""
	^\\$\\{\\{(.|[\r
	])*\\}\\}$
	"""
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-0.7.cue:37:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-0.7.cue:37:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullWord]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-0.7.cue:43:5: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullWord]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		list: {0, 1}
		struct: {0, 1}
		null: {0, 1}
		bool: {0, 1}
		float: {0, 1}
		string: {0, 1}
		int: {0, 1}
		bytes: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-0.7.cue:411:1: #word
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-0.7.cue:411:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-0.7.cue:411:36: #fullWord
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.0.cue:44:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.0.cue:44:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.0.cue:50:5: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		null: {0, 1}
		int: {0, 1}
		float: {0, 1}
		string: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		bool: {0, 1}
		bytes: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.0.cue:421:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.0.cue:421:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.0.cue:421:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.2.cue:45:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.2.cue:45:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.2.cue:51:5: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		float: {0, 1}
		bytes: {0, 1}
		bool: {0, 1}
		string: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		null: {0, 1}
		int: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.2.cue:430:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.2.cue:430:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-1.2.cue:430:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:46:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:46:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:52:5: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		null: {0, 1}
		bool: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		int: {0, 1}
		float: {0, 1}
		struct: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:195:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:195:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:195:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:471:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:471:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-2.0.cue:471:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:46:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:46:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:46:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		bool: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		int: {0, 1}
		float: {0, 1}
		null: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:198:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:198:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:198:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:484:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:484:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.0.cue:484:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:46:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:46:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:46:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		null: {0, 1}
		int: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		bool: {0, 1}
		float: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:202:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:202:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:202:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:488:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:488:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.1.cue:488:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:47:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:47:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:47:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		null: {0, 1}
		bool: {0, 1}
		int: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		float: {0, 1}
		string: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:213:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:213:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:213:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:499:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:499:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.2.cue:499:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:47:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:47:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:47:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		list: {0, 1}
		struct: {0, 1}
		null: {0, 1}
		bool: {0, 1}
		int: {0, 1}
		float: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:217:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:217:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:217:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:503:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:503:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.3.cue:503:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:47:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:47:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:47:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		int: {0, 1}
		float: {0, 1}
		string: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		null: {0, 1}
		bytes: {0, 1}
		bool: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:64:1: #adverbPhrase
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:64:27: {
	Adverbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:64:50: {
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Adverbs
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Adverbs {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adverbs) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:239:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:239:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:239:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:539:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:539:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.4.cue:539:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:47:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:47:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:47:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		null: {0, 1}
		bool: {0, 1}
		float: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		int: {0, 1}
		struct: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:64:1: #adverbPhrase
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:64:27: {
	Adverbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:64:50: {
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Adverbs
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Adverbs {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adverbs) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:244:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:244:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:244:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:1: #phrasing
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:23: {
	Attribute!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Object!: matchN(1, [#identifier, #fullRoleReference])
	}
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:43: {
	Name!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Name!: matchN(1, [#identifier, #fullRoleReference])
	}
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:58: {
	Adjective!: matchN(1, [#adjectivePhrasingProperty, #antonymPhrasingProperty])
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:78: {
	DynamicAdjective!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Adjective!: matchN(1, [#identifier, #fullRoleReference])
	}
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:105: {
	Noun!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Nouns!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
	}
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:120: {
	DynamicNoun!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Noun!: matchN(1, [#identifier, #fullRoleReference])
	}
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:142: {
	Preposition!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Prepositions!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
		Object!: matchN(1, [#identifier, #fullRoleReference])
	}
}
7: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:445:164: {
	Verb!: {
		Verbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
	}
}
discriminate {0, 1, 2, 3, 4, 5, 6, 7} {
	----- PATH Adjective
	values:
	kinds:
		null: {2}
		bool: {2}
		int: {2}
		float: {2}
		string: {2}
		bytes: {2}
		list: {2}
		struct: {2}
	----- PATH Attribute
	values:
	kinds:
		struct: {0}
	----- PATH Name
	values:
	kinds:
		struct: {1}
	----- PATH DynamicAdjective
	values:
	kinds:
		struct: {3}
	----- PATH Noun
	values:
	kinds:
		struct: {4}
	----- PATH DynamicNoun
	values:
	kinds:
		struct: {5}
	----- PATH Preposition
	values:
	kinds:
		struct: {6}
	----- PATH Verb
	values:
	kinds:
		struct: {7}
	----- PATH Attribute.Subject
	values:
	kinds:
		struct: {0}
		null: {0}
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
	----- PATH Attribute.Object
	values:
	kinds:
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
		null: {0}
	----- PATH Name.Subject
	values:
	kinds:
		null: {1}
		bool: {1}
		int: {1}
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
	----- PATH Name.Name
	values:
	kinds:
		list: {1}
		struct: {1}
		null: {1}
		bool: {1}
		int: {1}
		float: {1}
		string: {1}
		bytes: {1}
	----- PATH DynamicAdjective.Subject
	values:
	kinds:
		float: {3}
		string: {3}
		bytes: {3}
		list: {3}
		struct: {3}
		null: {3}
		bool: {3}
		int: {3}
	----- PATH DynamicAdjective.Adjective
	values:
	kinds:
		struct: {3}
		null: {3}
		bool: {3}
		int: {3}
		float: {3}
		string: {3}
		bytes: {3}
		list: {3}
	----- PATH Noun.Subject
	values:
	kinds:
		null: {4}
		bool: {4}
		int: {4}
		float: {4}
		string: {4}
		bytes: {4}
		list: {4}
		struct: {4}
	----- PATH Noun.Nouns
	values:
	kinds:
		list: {4}
	----- PATH DynamicNoun.Subject
	values:
	kinds:
		bytes: {5}
		list: {5}
		struct: {5}
		null: {5}
		bool: {5}
		int: {5}
		float: {5}
		string: {5}
	----- PATH DynamicNoun.Noun
	values:
	kinds:
		list: {5}
		struct: {5}
		null: {5}
		bool: {5}
		int: {5}
		float: {5}
		string: {5}
		bytes: {5}
	----- PATH Preposition.Subject
	values:
	kinds:
		bytes: {6}
		list: {6}
		struct: {6}
		null: {6}
		bool: {6}
		int: {6}
		float: {6}
		string: {6}
	----- PATH Preposition.Prepositions
	values:
	kinds:
		list: {6}
	----- PATH Preposition.Object
	values:
	kinds:
		bytes: {6}
		list: {6}
		struct: {6}
		null: {6}
		bool: {6}
		int: {6}
		float: {6}
		string: {6}
	----- PATH Verb.Verbs
	values:
	kinds:
		list: {7}
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6, 7}
	----- PATH Adjective {0, 1, 3, 4, 5, 6, 7}; possible {0, 1, 2, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH Attribute {1, 2, 3, 4, 5, 6, 7}; possible {0, 1, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH Name {0, 2, 3, 4, 5, 6, 7}; possible {1, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH DynamicAdjective {0, 1, 2, 4, 5, 6, 7}; possible {3, 4, 5, 6, 7}
	it's possible!
	----- PATH Noun {0, 1, 2, 3, 5, 6, 7}; possible {4, 5, 6, 7}
	it's possible!
	----- PATH DynamicNoun {0, 1, 2, 3, 4, 6, 7}; possible {5, 6, 7}
	it's possible!
	----- PATH Preposition {0, 1, 2, 3, 4, 5, 7}; possible {6, 7}
	it's possible!
	----- PATH Verb {0, 1, 2, 3, 4, 5, 6}; possible {7}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjective) -> {0, 1, 3, 4, 5, 6, 7}
	notPresent(Attribute) -> {1, 2, 3, 4, 5, 6, 7}
	notPresent(DynamicAdjective) -> {0, 1, 2, 4, 5, 6, 7}
	notPresent(DynamicNoun) -> {0, 1, 2, 3, 4, 6, 7}
	notPresent(Name) -> {0, 2, 3, 4, 5, 6, 7}
	notPresent(Noun) -> {0, 1, 2, 3, 5, 6, 7}
	notPresent(Preposition) -> {0, 1, 2, 3, 4, 5, 7}
	notPresent(Verb) -> {0, 1, 2, 3, 4, 5, 6}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:548:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:548:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-3.5.cue:548:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:44:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:44:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:44:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		struct: {0, 1}
		int: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
		null: {0, 1}
		bool: {0, 1}
		float: {0, 1}
		list: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:61:1: #adverbPhrase
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:61:27: {
	Adverbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:61:50: {
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Adverbs
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Adverbs {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adverbs) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:252:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:252:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:252:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:1: #phrasing
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:23: {
	Attribute!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Object!: matchN(1, [#identifier, #fullRoleReference])
	}
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:43: {
	Name!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Name!: matchN(1, [#identifier, #fullRoleReference])
	}
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:58: {
	Adjective!: matchN(1, [#adjectivePhrasingProperty, #antonymPhrasingProperty])
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:78: {
	DynamicAdjective!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Adjective!: matchN(1, [#identifier, #fullRoleReference])
	}
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:105: {
	Noun!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Nouns!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
	}
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:120: {
	DynamicNoun!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Noun!: matchN(1, [#identifier, #fullRoleReference])
	}
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:142: {
	Preposition!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Prepositions!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
		Object!: matchN(1, [#identifier, #fullRoleReference])
	}
}
7: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:453:164: {
	Verb!: {
		Verbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
	}
}
discriminate {0, 1, 2, 3, 4, 5, 6, 7} {
	----- PATH Adjective
	values:
	kinds:
		list: {2}
		struct: {2}
		null: {2}
		bool: {2}
		int: {2}
		float: {2}
		string: {2}
		bytes: {2}
	----- PATH Attribute
	values:
	kinds:
		struct: {0}
	----- PATH Name
	values:
	kinds:
		struct: {1}
	----- PATH DynamicAdjective
	values:
	kinds:
		struct: {3}
	----- PATH Noun
	values:
	kinds:
		struct: {4}
	----- PATH DynamicNoun
	values:
	kinds:
		struct: {5}
	----- PATH Preposition
	values:
	kinds:
		struct: {6}
	----- PATH Verb
	values:
	kinds:
		struct: {7}
	----- PATH Attribute.Subject
	values:
	kinds:
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
		null: {0}
		bool: {0}
	----- PATH Attribute.Object
	values:
	kinds:
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
		null: {0}
		bool: {0}
		int: {0}
	----- PATH Name.Subject
	values:
	kinds:
		null: {1}
		bool: {1}
		int: {1}
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
	----- PATH Name.Name
	values:
	kinds:
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
		null: {1}
		bool: {1}
		int: {1}
	----- PATH DynamicAdjective.Subject
	values:
	kinds:
		int: {3}
		float: {3}
		string: {3}
		bytes: {3}
		list: {3}
		struct: {3}
		null: {3}
		bool: {3}
	----- PATH DynamicAdjective.Adjective
	values:
	kinds:
		bytes: {3}
		list: {3}
		struct: {3}
		null: {3}
		bool: {3}
		int: {3}
		float: {3}
		string: {3}
	----- PATH Noun.Subject
	values:
	kinds:
		bool: {4}
		int: {4}
		float: {4}
		string: {4}
		bytes: {4}
		list: {4}
		struct: {4}
		null: {4}
	----- PATH Noun.Nouns
	values:
	kinds:
		list: {4}
	----- PATH DynamicNoun.Subject
	values:
	kinds:
		string: {5}
		bytes: {5}
		list: {5}
		struct: {5}
		null: {5}
		bool: {5}
		int: {5}
		float: {5}
	----- PATH DynamicNoun.Noun
	values:
	kinds:
		int: {5}
		float: {5}
		string: {5}
		bytes: {5}
		list: {5}
		struct: {5}
		null: {5}
		bool: {5}
	----- PATH Preposition.Subject
	values:
	kinds:
		null: {6}
		bool: {6}
		int: {6}
		float: {6}
		string: {6}
		bytes: {6}
		list: {6}
		struct: {6}
	----- PATH Preposition.Prepositions
	values:
	kinds:
		list: {6}
	----- PATH Preposition.Object
	values:
	kinds:
		struct: {6}
		null: {6}
		bool: {6}
		int: {6}
		float: {6}
		string: {6}
		bytes: {6}
		list: {6}
	----- PATH Verb.Verbs
	values:
	kinds:
		list: {7}
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6, 7}
	----- PATH Adjective {0, 1, 3, 4, 5, 6, 7}; possible {0, 1, 2, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH Attribute {1, 2, 3, 4, 5, 6, 7}; possible {0, 1, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH Name {0, 2, 3, 4, 5, 6, 7}; possible {1, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH DynamicAdjective {0, 1, 2, 4, 5, 6, 7}; possible {3, 4, 5, 6, 7}
	it's possible!
	----- PATH Noun {0, 1, 2, 3, 5, 6, 7}; possible {4, 5, 6, 7}
	it's possible!
	----- PATH DynamicNoun {0, 1, 2, 3, 4, 6, 7}; possible {5, 6, 7}
	it's possible!
	----- PATH Preposition {0, 1, 2, 3, 4, 5, 7}; possible {6, 7}
	it's possible!
	----- PATH Verb {0, 1, 2, 3, 4, 5, 6}; possible {7}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjective) -> {0, 1, 3, 4, 5, 6, 7}
	notPresent(Attribute) -> {1, 2, 3, 4, 5, 6, 7}
	notPresent(DynamicAdjective) -> {0, 1, 2, 4, 5, 6, 7}
	notPresent(DynamicNoun) -> {0, 1, 2, 3, 4, 6, 7}
	notPresent(Name) -> {0, 2, 3, 4, 5, 6, 7}
	notPresent(Noun) -> {0, 1, 2, 3, 5, 6, 7}
	notPresent(Preposition) -> {0, 1, 2, 3, 4, 5, 7}
	notPresent(Verb) -> {0, 1, 2, 3, 4, 5, 6}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:556:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:556:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.0.cue:556:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:44:1: #adjectivePhrasingProperties
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:44:42: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Adjectives!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:44:70: {
	Subject!: matchN(1, [#identifier, #fullRoleReference])
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Subject
	values:
	kinds:
		int: {0, 1}
		float: {0, 1}
		bytes: {0, 1}
		null: {0, 1}
		bool: {0, 1}
		string: {0, 1}
		list: {0, 1}
		struct: {0, 1}
	----- PATH Adjectives
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Subject {}; possible {0, 1}
	----- PATH Adjectives {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjectives) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:61:1: #adverbPhrase
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:61:27: {
	Adverbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:61:50: {
	Antonyms!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
}
discriminate {0, 1} {
	----- PATH Adverbs
	values:
	kinds:
		list: {0}
	----- PATH Antonyms
	values:
	kinds:
		list: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH Adverbs {1}; possible {0, 1}
	it's possible!
	----- PATH Antonyms {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adverbs) -> {1}
	notPresent(Antonyms) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:253:1: #example
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:253:22: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:253:39: #fullExample
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:1: #phrasing
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:23: {
	Attribute!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Object!: matchN(1, [#identifier, #fullRoleReference])
	}
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:43: {
	Name!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Name!: matchN(1, [#identifier, #fullRoleReference])
	}
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:58: {
	Adjective!: matchN(1, [#adjectivePhrasingProperty, #antonymPhrasingProperty])
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:78: {
	DynamicAdjective!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Adjective!: matchN(1, [#identifier, #fullRoleReference])
	}
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:105: {
	Noun!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Nouns!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
	}
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:120: {
	DynamicNoun!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Noun!: matchN(1, [#identifier, #fullRoleReference])
	}
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:142: {
	Preposition!: {
		Subject!: matchN(1, [#identifier, #fullRoleReference])
		Prepositions!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
		Object!: matchN(1, [#identifier, #fullRoleReference])
	}
}
7: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:454:164: {
	Verb!: {
		Verbs!: [matchN(1, [#nonEmptyString, #fullTerm]), ...]
	}
}
discriminate {0, 1, 2, 3, 4, 5, 6, 7} {
	----- PATH Adjective
	values:
	kinds:
		bool: {2}
		int: {2}
		float: {2}
		string: {2}
		bytes: {2}
		list: {2}
		struct: {2}
		null: {2}
	----- PATH Attribute
	values:
	kinds:
		struct: {0}
	----- PATH Name
	values:
	kinds:
		struct: {1}
	----- PATH DynamicAdjective
	values:
	kinds:
		struct: {3}
	----- PATH Noun
	values:
	kinds:
		struct: {4}
	----- PATH DynamicNoun
	values:
	kinds:
		struct: {5}
	----- PATH Preposition
	values:
	kinds:
		struct: {6}
	----- PATH Verb
	values:
	kinds:
		struct: {7}
	----- PATH Attribute.Subject
	values:
	kinds:
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
		null: {0}
	----- PATH Attribute.Object
	values:
	kinds:
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
		null: {0}
	----- PATH Name.Subject
	values:
	kinds:
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
		null: {1}
		bool: {1}
		int: {1}
	----- PATH Name.Name
	values:
	kinds:
		bool: {1}
		int: {1}
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
		null: {1}
	----- PATH DynamicAdjective.Subject
	values:
	kinds:
		struct: {3}
		null: {3}
		bool: {3}
		int: {3}
		float: {3}
		string: {3}
		bytes: {3}
		list: {3}
	----- PATH DynamicAdjective.Adjective
	values:
	kinds:
		string: {3}
		bytes: {3}
		list: {3}
		struct: {3}
		null: {3}
		bool: {3}
		int: {3}
		float: {3}
	----- PATH Noun.Subject
	values:
	kinds:
		string: {4}
		bytes: {4}
		list: {4}
		struct: {4}
		null: {4}
		bool: {4}
		int: {4}
		float: {4}
	----- PATH Noun.Nouns
	values:
	kinds:
		list: {4}
	----- PATH DynamicNoun.Subject
	values:
	kinds:
		bool: {5}
		int: {5}
		float: {5}
		string: {5}
		bytes: {5}
		list: {5}
		struct: {5}
		null: {5}
	----- PATH DynamicNoun.Noun
	values:
	kinds:
		string: {5}
		bytes: {5}
		list: {5}
		struct: {5}
		null: {5}
		bool: {5}
		int: {5}
		float: {5}
	----- PATH Preposition.Subject
	values:
	kinds:
		bytes: {6}
		list: {6}
		struct: {6}
		null: {6}
		bool: {6}
		int: {6}
		float: {6}
		string: {6}
	----- PATH Preposition.Prepositions
	values:
	kinds:
		list: {6}
	----- PATH Preposition.Object
	values:
	kinds:
		bool: {6}
		int: {6}
		float: {6}
		string: {6}
		bytes: {6}
		list: {6}
		struct: {6}
		null: {6}
	----- PATH Verb.Verbs
	values:
	kinds:
		list: {7}
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6, 7}
	----- PATH Adjective {0, 1, 3, 4, 5, 6, 7}; possible {0, 1, 2, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH Attribute {1, 2, 3, 4, 5, 6, 7}; possible {0, 1, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH Name {0, 2, 3, 4, 5, 6, 7}; possible {1, 3, 4, 5, 6, 7}
	it's possible!
	----- PATH DynamicAdjective {0, 1, 2, 4, 5, 6, 7}; possible {3, 4, 5, 6, 7}
	it's possible!
	----- PATH Noun {0, 1, 2, 3, 5, 6, 7}; possible {4, 5, 6, 7}
	it's possible!
	----- PATH DynamicNoun {0, 1, 2, 3, 4, 6, 7}; possible {5, 6, 7}
	it's possible!
	----- PATH Preposition {0, 1, 2, 3, 4, 5, 7}; possible {6, 7}
	it's possible!
	----- PATH Verb {0, 1, 2, 3, 4, 5, 6}; possible {7}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(Adjective) -> {0, 1, 3, 4, 5, 6, 7}
	notPresent(Attribute) -> {1, 2, 3, 4, 5, 6, 7}
	notPresent(DynamicAdjective) -> {0, 1, 2, 4, 5, 6, 7}
	notPresent(DynamicNoun) -> {0, 1, 2, 3, 4, 6, 7}
	notPresent(Name) -> {0, 2, 3, 4, 5, 6, 7}
	notPresent(Noun) -> {0, 1, 2, 3, 5, 6, 7}
	notPresent(Preposition) -> {0, 1, 2, 3, 4, 5, 7}
	notPresent(Verb) -> {0, 1, 2, 3, 4, 5, 6}
}

/home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:557:1: #term
0: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:557:19: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/lsdlschema-4.1.cue:557:36: #fullTerm
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/mongodb-atlas-search-index-definition.cue:39:2: storedSource
0: /home/rogpeppe/other/schemastore/src/schemas/json/mongodb-atlas-search-index-definition.cue:39:28: bool
1: /home/rogpeppe/other/schemastore/src/schemas/json/mongodb-atlas-search-index-definition.cue:39:34: matchN(>=1, [close({
	include!: [...string]
	exclude?: [...string]
}), close({
	include?: [...string]
	exclude!: [...string]
})])
discriminate {0, 1} {
	kind list: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind struct: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind bool: {0, 1}
	kind null: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind int: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind float: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind string: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
	kind bytes: {1}
	discriminate {1} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({1})
case bool:
	choose({0, 1})
case int:
	choose({1})
case float:
	choose({1})
case string:
	choose({1})
case bytes:
	choose({1})
case list:
	choose({1})
case struct:
	choose({1})
}

/home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:1: #one_of_tasks
0: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:27: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:35: {
	cmd!: string
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:46: {
	script!: string
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:60: {
	shell!: string
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:73: {
	sequence!: [...]
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:89: {
	expr!: string
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:101: {
	control!: matchN(1, [string, #cmd_task, #script_task, #shell_task, #sequence_task, #expr_task, #switch_task, #ref_task])
	switch!: [...]
}
7: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poe.cue:176:115: {
	ref!: string
}
discriminate {0, 1, 2, 3, 4, 5, 6, 7} {
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {1, 2, 3, 4, 5, 6, 7}
	discriminate {1, 2, 3, 4, 5, 6, 7} {
		----- PATH cmd
		values:
		kinds:
			string: {1}
		----- PATH script
		values:
		kinds:
			string: {2}
		----- PATH shell
		values:
		kinds:
			string: {3}
		----- PATH sequence
		values:
		kinds:
			list: {4}
		----- PATH expr
		values:
		kinds:
			string: {5}
		----- PATH control
		values:
		kinds:
			string: {6}
			bytes: {6}
			list: {6}
			struct: {6}
			null: {6}
			bool: {6}
			int: {6}
			float: {6}
		----- PATH switch
		values:
		kinds:
			list: {6}
		----- PATH ref
		values:
		kinds:
			string: {7}
		no pure discriminator found; trying existence checks; selected {1, 2, 3, 4, 5, 6, 7}
		----- PATH cmd {2, 3, 4, 5, 6, 7}; possible {1, 2, 3, 4, 5, 6, 7}
		it's possible!
		----- PATH script {1, 3, 4, 5, 6, 7}; possible {2, 3, 4, 5, 6, 7}
		it's possible!
		----- PATH shell {1, 2, 4, 5, 6, 7}; possible {3, 4, 5, 6, 7}
		it's possible!
		----- PATH sequence {1, 2, 3, 5, 6, 7}; possible {4, 5, 6, 7}
		it's possible!
		----- PATH expr {1, 2, 3, 4, 6, 7}; possible {5, 6, 7}
		it's possible!
		----- PATH control {1, 2, 3, 4, 5, 7}; possible {6, 7}
		it's possible!
		----- PATH switch {1, 2, 3, 4, 5, 7}; possible {7}
		it's possible!
		nothing removed
		----- PATH ref {1, 2, 3, 4, 5, 6}; possible {7}
		it's possible!
	} -> *cuediscrim.FieldAbsenceNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case string:
	choose({0})
case struct:
	allOf {
		notPresent(cmd) -> {2, 3, 4, 5, 6, 7}
		notPresent(control) -> {1, 2, 3, 4, 5, 7}
		notPresent(expr) -> {1, 2, 3, 4, 6, 7}
		notPresent(ref) -> {1, 2, 3, 4, 5, 6}
		notPresent(script) -> {1, 3, 4, 5, 6, 7}
		notPresent(sequence) -> {1, 2, 3, 5, 6, 7}
		notPresent(shell) -> {1, 2, 4, 5, 6, 7}
	}
}

/home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:4: #."poetry-dependency-any"
0: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:40: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:63: {
	version!: string
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:91: {
	git!: matchN(>=1, [net.AbsURL, =~"^([A-Za-z0-9\\-]+@|https://|http://)[A-Za-z][A-Za-z0-9+.-]*(:|/)[A-Za-z0-9\\-\\.]+(/[A-Za-z0-9\\-_\\.]+)+\\.git$"])
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:118: {
	file!: string
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:146: {
	path!: string
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:174: {
	url!: string
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:156:201: [matchN(1, [#."poetry-dependency", #."poetry-long-dependency", #."poetry-git-dependency", #."poetry-file-dependency", #."poetry-path-dependency", #."poetry-url-dependency"]), ...]
discriminate {0, 1, 2, 3, 4, 5, 6} {
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {1, 2, 3, 4, 5}
	discriminate {1, 2, 3, 4, 5} {
		----- PATH version
		values:
		kinds:
			string: {1}
		----- PATH git
		values:
		kinds:
			string: {2}
			bytes: {2}
			list: {2}
			struct: {2}
			null: {2}
			bool: {2}
			int: {2}
			float: {2}
		----- PATH file
		values:
		kinds:
			string: {3}
		----- PATH path
		values:
		kinds:
			string: {4}
		----- PATH url
		values:
		kinds:
			string: {5}
		no pure discriminator found; trying existence checks; selected {1, 2, 3, 4, 5}
		----- PATH version {2, 3, 4, 5}; possible {1, 2, 3, 4, 5}
		it's possible!
		----- PATH git {1, 3, 4, 5}; possible {2, 3, 4, 5}
		it's possible!
		----- PATH file {1, 2, 4, 5}; possible {3, 4, 5}
		it's possible!
		----- PATH path {1, 2, 3, 5}; possible {4, 5}
		it's possible!
		----- PATH url {1, 2, 3, 4}; possible {5}
		it's possible!
	} -> *cuediscrim.FieldAbsenceNode
	kind list: {6}
	discriminate {6} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case string:
	choose({0})
case list:
	choose({6})
case struct:
	allOf {
		notPresent(file) -> {1, 2, 4, 5}
		notPresent(git) -> {1, 3, 4, 5}
		notPresent(path) -> {1, 2, 3, 5}
		notPresent(url) -> {1, 2, 3, 4}
		notPresent(version) -> {2, 3, 4, 5}
	}
}

/home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:333:4: #."poetry-script-table"
0: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:333:38: {}
1: /home/rogpeppe/other/schemastore/src/schemas/json/partial-poetry.cue:335:4: {
	reference!: string
	type!:      "file" | "console"
}
discriminate {0, 1} {
	----- PATH reference
	values:
	kinds:
		string: {1}
	----- PATH type
	values:
	kinds:
		string: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH reference {0}; possible {0, 1}
	it's possible!
	----- PATH type {0}; possible {0}
	it's possible!
	nothing removed
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:193:1: #dependency
0: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:226:32: "any"
1: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:226:40: ""
2: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:226:44: =~"^\\d+\\.\\d+\\.\\d+(?:[+-]\\S+)?$"
3: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:226:54: =~"^(?:(?:>=|>|<=|<)\\d+\\.\\d+\\.\\d+(?:[+-]\\S+)?\\s*)+$"
4: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:226:115: =~"^\\^\\d+\\.\\d+\\.\\d+(?:[+-]\\S+)?$"
5: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:193:45: null
6: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:193:51: {
	sdk!: string
}
7: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:197:5: {
	hosted!: matchN(1, [net.AbsURL, {
		name?: string
		url!:  net.AbsURL
		...
	}])
}
8: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:206:5: {
	git!: matchN(1, [string, {
		url?:  string
		path?: string
		ref?:  string
		...
	}])
}
9: /home/rogpeppe/other/schemastore/src/schemas/json/pubspec.cue:219:5: {}
discriminate {0, 1, 2, 3, 4, 5, 6, 7, 8, 9} {
	kind string: {0, 1, 2, 3, 4}
	discriminate {0, 1, 2, 3, 4} {
	} -> *cuediscrim.LeafNode
	kind null: {5}
	discriminate {5} {
	} -> *cuediscrim.LeafNode
	kind struct: {6, 7, 8, 9}
	discriminate {6, 7, 8, 9} {
		----- PATH sdk
		values:
		kinds:
			string: {6}
		----- PATH hosted
		values:
		kinds:
			list: {7}
			struct: {7}
			null: {7}
			bool: {7}
			int: {7}
			float: {7}
			string: {7}
			bytes: {7}
		----- PATH git
		values:
		kinds:
			list: {8}
			struct: {8}
			null: {8}
			bool: {8}
			int: {8}
			float: {8}
			string: {8}
			bytes: {8}
		no pure discriminator found; trying existence checks; selected {6, 7, 8, 9}
		----- PATH sdk {7, 8, 9}; possible {6, 7, 8, 9}
		it's possible!
		----- PATH hosted {6, 8, 9}; possible {7, 8, 9}
		it's possible!
		----- PATH git {6, 7, 9}; possible {8, 9}
		it's possible!
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({5})
case string:
	choose({0, 1, 2, 3, 4})
case struct:
	choose({6, 7, 8, 9})
}

/home/rogpeppe/other/schemastore/src/schemas/json/putout.cue:38:1: #rule
0: /home/rogpeppe/other/schemastore/src/schemas/json/putout.cue:38:19: "on"
1: /home/rogpeppe/other/schemastore/src/schemas/json/putout.cue:38:26: "off"
2: /home/rogpeppe/other/schemastore/src/schemas/json/putout.cue:38:33: ["on" | "off", {}]
3: /home/rogpeppe/other/schemastore/src/schemas/json/putout.cue:40:19: ["on" | "off", string, {}]
4: /home/rogpeppe/other/schemastore/src/schemas/json/putout.cue:42:22: ["on" | "off", string]
discriminate {0, 1, 2, 3, 4} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:13:3: notifications.webhooks
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:35: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:43: {}
2: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:502:95: [matchN(1, [string, close({
	secure?: string
})]), ...]
3: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:13:85: bool
4: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:13:91: {}
5: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:13:142: [{}, ...{}]
discriminate {0, 1, 2, 3, 4, 5} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:15:3: notifications.email
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:35: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:43: {}
2: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:502:95: [matchN(1, [string, close({
	secure?: string
})]), ...]
3: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:15:82: bool
4: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:15:88: {}
5: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:15:136: [{}, ...{}]
discriminate {0, 1, 2, 3, 4, 5} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:16:3: notifications.irc
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:35: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:43: {}
2: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:502:95: [matchN(1, [string, close({
	secure?: string
})]), ...]
3: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:16:80: bool
4: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:16:86: {}
5: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:16:132: [{}, ...{}]
discriminate {0, 1, 2, 3, 4, 5} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:17:3: notifications.pushover
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:488:53: strings.MinRunes(1)
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:488:70: [...strings.MinRunes(1)]
2: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:17:66: bool
3: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:17:72: {}
4: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:17:123: [{}, ...{}]
discriminate {0, 1, 2, 3, 4} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:18:3: notifications.campfire
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:35: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:43: {}
2: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:502:95: [matchN(1, [string, close({
	secure?: string
})]), ...]
3: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:18:85: bool
4: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:18:91: {}
5: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:18:142: [{}, ...{}]
discriminate {0, 1, 2, 3, 4, 5} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:20:3: notifications.hipchat
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:35: string
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:498:43: {}
2: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:502:95: [matchN(1, [string, close({
	secure?: string
})]), ...]
3: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:20:84: bool
4: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:20:90: {}
5: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:20:140: [{}, ...{}]
discriminate {0, 1, 2, 3, 4, 5} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:480:2: #job.deploy
0: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:480:22: [...#deployment]
1: /home/rogpeppe/other/schemastore/src/schemas/json/travis.cue:480:40: #deployment
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:334:2: #iconDefinition.theme
0: /home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:334:21: ["lightest" | "light" | "dark" | "darkest", ..."lightest" | "light" | "dark" | "darkest"]
1: /home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:334:101: ["all"]
discriminate {0, 1} {
	no pure discriminator found; trying existence checks; selected {0, 1}
} -> *cuediscrim.LeafNode
choose({0, 1})

/home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:339:2: #iconDefinition.species
0: /home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:339:23: ["generic"]
1: /home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:339:36: ["toolbar"]
2: /home/rogpeppe/other/schemastore/src/schemas/json/uxp-manifest-5.cue:339:49: ["pluginList"]
discriminate {0, 1, 2} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.0.0.cue:54:9: _#defs."/definitions/1b880/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.0.0.cue:54:47: matchN(>=1, [=~"^.*\\.[vV][cC][dD][lL]$", =~"^.*\\.[vV][cC][oO][dD][mM]$"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.0.0.cue:54:81: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.0.0.cue:60:2: _#defs."/definitions/4839f/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.0.0.cue:60:27: matchN(>=1, [=~"^.*\\.[vV][sS][yY][sS][vV][aA][rR]$", =~"^.*\\.[xX][mM][lL]$"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.0.0.cue:60:61: [...]
discriminate {0, 1} {
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.2.0.cue:52:9: _#defs."/definitions/1b880/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.2.0.cue:52:47: matchN(>=1, [=~"^.*\\.[vV][cC][dD][lL]$", =~"^.*\\.[vV][cC][oO][dD][mM]$"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.2.0.cue:52:81: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.2.0.cue:65:2: _#defs."/definitions/4839f/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.2.0.cue:65:27: matchN(>=1, [=~"^.*\\.[vV][sS][yY][sS][vV][aA][rR]$", =~"^.*\\.[xX][mM][lL]$"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-basic-schema-v3.2.0.cue:65:61: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:652:9: _#defs."/definitions/ce2b5/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:652:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	value!: bool | number | string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:656:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "int"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:662:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "uint"
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:668:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "string" | "path"
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:674:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "bool"
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.0.0.cue:680:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "float"
}
discriminate {0, 1, 2, 3, 4, 5} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2, 3, 4, 5}
	----- PATH value
	values:
	kinds:
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
	----- PATH type
	values:
		"int": {1}
		"uint": {2}
		"string": {3}
		"path": {3}
		"bool": {4}
		"float": {5}
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
	----- PATH name {}; possible {0, 1, 2, 3, 4, 5}
	----- PATH value {1, 2, 3, 4, 5}; possible {0, 1, 2, 3, 4, 5}
	it's possible!
	----- PATH type {0}; possible {1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:844:9: _#defs."/definitions/ce2b5/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:844:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	value!: bool | number | string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:848:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "int"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:854:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "uint"
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:860:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "string" | "path"
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:866:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "bool"
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.1.0.cue:872:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "float"
}
discriminate {0, 1, 2, 3, 4, 5} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2, 3, 4, 5}
	----- PATH value
	values:
	kinds:
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
	----- PATH type
	values:
		"bool": {4}
		"float": {5}
		"int": {1}
		"uint": {2}
		"path": {3}
		"string": {3}
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
	----- PATH name {}; possible {0, 1, 2, 3, 4, 5}
	----- PATH value {1, 2, 3, 4, 5}; possible {0, 1, 2, 3, 4, 5}
	it's possible!
	----- PATH type {0}; possible {1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:66:9: _#defs."/definitions/048e3/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:66:47: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>=0 & <=10000, _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:71:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>=0 & <=10000, _#defs."/definitions/779cd/full"])
	"active-model-variables"!: [...]
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:77:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>=0 & <=10000, _#defs."/definitions/779cd/full"])
	"inactive-model-variables"!: [...]
}
discriminate {0, 1, 2} {
	----- PATH file-path
	values:
	kinds:
		list: {0, 1, 2}
		null: {0, 1, 2}
		struct: {0, 1, 2}
		bool: {0, 1, 2}
		int: {0, 1, 2}
		float: {0, 1, 2}
		string: {0, 1, 2}
		bytes: {0, 1, 2}
	----- PATH stepsize-in-sec
	values:
	kinds:
		struct: {0, 1, 2}
		null: {0, 1, 2}
		int: {0, 1, 2}
		string: {0, 1, 2}
		bytes: {0, 1, 2}
		bool: {0, 1, 2}
		float: {0, 1, 2}
		list: {0, 1, 2}
	----- PATH active-model-variables
	values:
	kinds:
		list: {1}
	----- PATH inactive-model-variables
	values:
	kinds:
		list: {2}
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH file-path {}; possible {0, 1, 2}
	----- PATH stepsize-in-sec {}; possible {0, 1, 2}
	----- PATH active-model-variables {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH inactive-model-variables {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:333:9: _#defs."/definitions/535fe/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:333:47: matchN(>=1, [=~"^.*\\.[vV][cC][dD][lL]$", =~"^.*\\.[vV][cC][oO][dD][mM]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:333:81: [...]
discriminate {0, 1} {
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:347:2: _#defs."/definitions/5b3ba/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:347:27: matchN(>=1, [=~"^.*\\.[Yy][Aa]?[Mm][Ll]$", =~"^.*\\.[xX][cC][pP][cC][fF][gG]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:347:61: [...]
discriminate {0, 1} {
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:601:9: _#defs."/definitions/87cf9/local/ipv4-with-subnet"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:601:65: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-mask"!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:604:5: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-prefix-length"!: matchN(1, [int & >=0 & <=32, _#defs."/definitions/779cd/full"])
}
discriminate {0, 1} {
	----- PATH address
	values:
	kinds:
		float: {0, 1}
		list: {0, 1}
		bool: {0, 1}
		int: {0, 1}
		string: {0, 1}
		bytes: {0, 1}
		struct: {0, 1}
		null: {0, 1}
	----- PATH subnet-mask
	values:
	kinds:
		null: {0}
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
	----- PATH subnet-prefix-length
	values:
	kinds:
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
		null: {1}
		bool: {1}
		int: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH address {}; possible {0, 1}
	----- PATH subnet-mask {1}; possible {0, 1}
	it's possible!
	----- PATH subnet-prefix-length {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(subnet-mask) -> {1}
	notPresent(subnet-prefix-length) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:892:2: _#defs."/definitions/bd659/full"."capl-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:892:35: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:892:69: [...]
discriminate {0, 1} {
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:897:2: _#defs."/definitions/bd659/full"."c-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:897:32: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:897:66: [...]
discriminate {0, 1} {
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:995:2: _#defs."/definitions/d5013/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:995:27: matchN(>=1, [=~"^.*\\.[vV][sS][yY][sS][vV][aA][rR]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:995:61: [...]
discriminate {0, 1} {
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1017:9: _#defs."/definitions/daa86/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1017:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	value!: bool | number | string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1023:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "int"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1029:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "uint"
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1035:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "string" | "path"
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1043:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "bool"
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v2.2.0.cue:1051:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "float"
}
discriminate {0, 1, 2, 3, 4, 5} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2, 3, 4, 5}
	----- PATH value
	values:
	kinds:
		int: {0}
		float: {0}
		string: {0}
		bool: {0}
	----- PATH type
	values:
		"string": {3}
		"path": {3}
		"bool": {4}
		"float": {5}
		"int": {1}
		"uint": {2}
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
	----- PATH name {}; possible {0, 1, 2, 3, 4, 5}
	----- PATH value {1, 2, 3, 4, 5}; possible {0, 1, 2, 3, 4, 5}
	it's possible!
	----- PATH type {0}; possible {1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:20:9: _#defs."/definitions/00e8b/local/ipv4-with-subnet"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:20:65: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-mask"!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:24:5: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-prefix-length"!: matchN(1, [int & >=0 & <=32, _#defs."/definitions/779cd/full"])
}
discriminate {0, 1} {
	----- PATH address
	values:
	kinds:
		null: {0, 1}
		bool: {0, 1}
		float: {0, 1}
		string: {0, 1}
		list: {0, 1}
		struct: {0, 1}
		int: {0, 1}
		bytes: {0, 1}
	----- PATH subnet-mask
	values:
	kinds:
		bytes: {0}
		list: {0}
		struct: {0}
		null: {0}
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
	----- PATH subnet-prefix-length
	values:
	kinds:
		bool: {1}
		int: {1}
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
		null: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH address {}; possible {0, 1}
	----- PATH subnet-mask {1}; possible {0, 1}
	it's possible!
	----- PATH subnet-prefix-length {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(subnet-mask) -> {1}
	notPresent(subnet-prefix-length) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:185:2: _#defs."/definitions/17563/full"."capl-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:185:35: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:185:69: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:190:2: _#defs."/definitions/17563/full"."c-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:190:32: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:190:66: [...]
discriminate {0, 1} {
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:257:2: _#defs."/definitions/2b57a/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:257:27: matchN(>=1, [=~"^.*\\.[Yy][Aa]?[Mm][Ll]$", =~"^.*\\.[xX][cC][pP][cC][fF][gG]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:257:61: [...]
discriminate {0, 1} {
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:264:9: _#defs."/definitions/2c08a/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:264:47: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:269:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
	"active-model-variables"!: [...]
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:275:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
	"inactive-model-variables"!: [...]
}
discriminate {0, 1, 2} {
	----- PATH file-path
	values:
	kinds:
		bool: {0, 1, 2}
		string: {0, 1, 2}
		list: {0, 1, 2}
		null: {0, 1, 2}
		int: {0, 1, 2}
		float: {0, 1, 2}
		bytes: {0, 1, 2}
		struct: {0, 1, 2}
	----- PATH stepsize-in-sec
	values:
	kinds:
		null: {0, 1, 2}
		bool: {0, 1, 2}
		bytes: {0, 1, 2}
		list: {0, 1, 2}
		int: {0, 1, 2}
		float: {0, 1, 2}
		string: {0, 1, 2}
		struct: {0, 1, 2}
	----- PATH active-model-variables
	values:
	kinds:
		list: {1}
	----- PATH inactive-model-variables
	values:
	kinds:
		list: {2}
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH file-path {}; possible {0, 1, 2}
	----- PATH stepsize-in-sec {}; possible {0, 1, 2}
	----- PATH active-model-variables {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH inactive-model-variables {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:542:9: _#defs."/definitions/66d5a/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:542:47: matchN(>=1, [=~"^.*\\.[vV][cC][dD][lL]$", =~"^.*\\.[vV][cC][oO][dD][mM]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:542:81: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:740:2: _#defs."/definitions/8b228/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:740:27: matchN(>=1, [=~"^.*\\.[vV][sS][yY][sS][vV][aA][rR]$", =~"^.*\\.[xX][mM][lL]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:740:61: [...]
discriminate {0, 1} {
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:866:9: _#defs."/definitions/9d153/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:866:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	value!: bool | number | string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:872:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "int"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:880:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "uint"
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:888:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "string" | "path"
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:898:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "bool"
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:908:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "float"
}
discriminate {0, 1, 2, 3, 4, 5} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2, 3, 4, 5}
	----- PATH value
	values:
	kinds:
		string: {0}
		bool: {0}
		int: {0}
		float: {0}
	----- PATH type
	values:
		"int": {1}
		"uint": {2}
		"string": {3}
		"path": {3}
		"bool": {4}
		"float": {5}
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
	----- PATH name {}; possible {0, 1, 2, 3, 4, 5}
	----- PATH value {1, 2, 3, 4, 5}; possible {0, 1, 2, 3, 4, 5}
	it's possible!
	----- PATH type {0}; possible {1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:1093:9: _#defs."/definitions/a46be/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:1093:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:1103:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
	"can-settings"!: _#defs."/definitions/efe85/full"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.0.0.cue:1114:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
	"can-fd-settings"!: _#defs."/definitions/7c619/full"
}
discriminate {0, 1, 2} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2}
	----- PATH database
	values:
	kinds:
		struct: {0, 1, 2}
		null: {0, 1, 2}
		int: {0, 1, 2}
		float: {0, 1, 2}
		bool: {0, 1, 2}
		string: {0, 1, 2}
		bytes: {0, 1, 2}
		list: {0, 1, 2}
	----- PATH can-settings
	values:
	kinds:
	----- PATH can-fd-settings
	values:
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH name {}; possible {0, 1, 2}
	----- PATH database {}; possible {0, 1, 2}
	----- PATH can-settings {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH can-fd-settings {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:20:9: _#defs."/definitions/00e8b/local/ipv4-with-subnet"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:20:65: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-mask"!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:24:5: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-prefix-length"!: matchN(1, [int & >=0 & <=32, _#defs."/definitions/779cd/full"])
}
discriminate {0, 1} {
	----- PATH address
	values:
	kinds:
		null: {0, 1}
		int: {0, 1}
		float: {0, 1}
		string: {0, 1}
		bool: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		struct: {0, 1}
	----- PATH subnet-mask
	values:
	kinds:
		list: {0}
		struct: {0}
		null: {0}
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
	----- PATH subnet-prefix-length
	values:
	kinds:
		null: {1}
		bool: {1}
		int: {1}
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH address {}; possible {0, 1}
	----- PATH subnet-mask {1}; possible {0, 1}
	it's possible!
	----- PATH subnet-prefix-length {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(subnet-mask) -> {1}
	notPresent(subnet-prefix-length) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:178:2: _#defs."/definitions/17563/full"."capl-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:178:35: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:178:69: [...]
discriminate {0, 1} {
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:183:2: _#defs."/definitions/17563/full"."c-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:183:32: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:183:66: [...]
discriminate {0, 1} {
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:245:2: _#defs."/definitions/2b57a/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:245:27: matchN(>=1, [=~"^.*\\.[Yy][Aa]?[Mm][Ll]$", =~"^.*\\.[xX][cC][pP][cC][fF][gG]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:245:61: [...]
discriminate {0, 1} {
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:252:9: _#defs."/definitions/2c08a/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:252:47: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:257:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
	"active-model-variables"!: [...]
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:263:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
	"inactive-model-variables"!: [...]
}
discriminate {0, 1, 2} {
	----- PATH file-path
	values:
	kinds:
		bool: {0, 1, 2}
		float: {0, 1, 2}
		string: {0, 1, 2}
		struct: {0, 1, 2}
		null: {0, 1, 2}
		int: {0, 1, 2}
		bytes: {0, 1, 2}
		list: {0, 1, 2}
	----- PATH stepsize-in-sec
	values:
	kinds:
		bool: {0, 1, 2}
		float: {0, 1, 2}
		string: {0, 1, 2}
		bytes: {0, 1, 2}
		int: {0, 1, 2}
		list: {0, 1, 2}
		struct: {0, 1, 2}
		null: {0, 1, 2}
	----- PATH active-model-variables
	values:
	kinds:
		list: {1}
	----- PATH inactive-model-variables
	values:
	kinds:
		list: {2}
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH file-path {}; possible {0, 1, 2}
	----- PATH stepsize-in-sec {}; possible {0, 1, 2}
	----- PATH active-model-variables {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH inactive-model-variables {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:548:9: _#defs."/definitions/66d5a/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:548:47: matchN(>=1, [=~"^.*\\.[vV][cC][dD][lL]$", =~"^.*\\.[vV][cC][oO][dD][mM]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:548:81: [...]
discriminate {0, 1} {
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:763:2: _#defs."/definitions/8b228/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:763:27: matchN(>=1, [=~"^.*\\.[vV][sS][yY][sS][vV][aA][rR]$", =~"^.*\\.[xX][mM][lL]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:763:61: [...]
discriminate {0, 1} {
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:889:9: _#defs."/definitions/9d153/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:889:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	value!: bool | number | string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:895:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "int"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:903:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "uint"
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:911:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "string" | "path"
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:921:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "bool"
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:931:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "float"
}
discriminate {0, 1, 2, 3, 4, 5} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2, 3, 4, 5}
	----- PATH value
	values:
	kinds:
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
	----- PATH type
	values:
		"path": {3}
		"bool": {4}
		"float": {5}
		"int": {1}
		"uint": {2}
		"string": {3}
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
	----- PATH name {}; possible {0, 1, 2, 3, 4, 5}
	----- PATH value {1, 2, 3, 4, 5}; possible {0, 1, 2, 3, 4, 5}
	it's possible!
	----- PATH type {0}; possible {1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:1116:9: _#defs."/definitions/a46be/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:1116:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:1126:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
	"can-settings"!: _#defs."/definitions/efe85/full"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.1.0.cue:1137:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
	"can-fd-settings"!: _#defs."/definitions/7c619/full"
}
discriminate {0, 1, 2} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2}
	----- PATH database
	values:
	kinds:
		null: {0, 1, 2}
		bool: {0, 1, 2}
		int: {0, 1, 2}
		bytes: {0, 1, 2}
		float: {0, 1, 2}
		string: {0, 1, 2}
		list: {0, 1, 2}
		struct: {0, 1, 2}
	----- PATH can-settings
	values:
	kinds:
	----- PATH can-fd-settings
	values:
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH name {}; possible {0, 1, 2}
	----- PATH database {}; possible {0, 1, 2}
	----- PATH can-settings {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH can-fd-settings {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:191:2: _#defs."/definitions/17563/full"."capl-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:191:35: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:191:69: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:196:2: _#defs."/definitions/17563/full"."c-library-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:196:32: matchN(>=1, [=~"^.*\\.[vV][mM][oO][dD][uU][lL][eE]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:196:66: [...]
discriminate {0, 1} {
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:330:2: _#defs."/definitions/2b57a/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:330:27: matchN(>=1, [=~"^.*\\.[Yy][Aa]?[Mm][Ll]$", =~"^.*\\.[xX][cC][pP][cC][fF][gG]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:330:61: [...]
discriminate {0, 1} {
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:337:9: _#defs."/definitions/2c08a/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:337:47: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:342:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
	"active-model-variables"!: [...]
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:348:5: {
	"file-path"!: matchN(>=1, [=~"^.*\\.[Ff][Mm][Uu]$", string & _#defs."/definitions/779cd/full"])
	"stepsize-in-sec"!: matchN(1, [>0 & math.MultipleOf(0.00001) & <=10000, _#defs."/definitions/779cd/full"])
	"inactive-model-variables"!: [...]
}
discriminate {0, 1, 2} {
	----- PATH file-path
	values:
	kinds:
		int: {0, 1, 2}
		string: {0, 1, 2}
		struct: {0, 1, 2}
		bool: {0, 1, 2}
		float: {0, 1, 2}
		bytes: {0, 1, 2}
		list: {0, 1, 2}
		null: {0, 1, 2}
	----- PATH stepsize-in-sec
	values:
	kinds:
		float: {0, 1, 2}
		string: {0, 1, 2}
		bytes: {0, 1, 2}
		list: {0, 1, 2}
		struct: {0, 1, 2}
		null: {0, 1, 2}
		bool: {0, 1, 2}
		int: {0, 1, 2}
	----- PATH active-model-variables
	values:
	kinds:
		list: {1}
	----- PATH inactive-model-variables
	values:
	kinds:
		list: {2}
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH file-path {}; possible {0, 1, 2}
	----- PATH stepsize-in-sec {}; possible {0, 1, 2}
	----- PATH active-model-variables {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH inactive-model-variables {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:490:9: _#defs."/definitions/4dc28/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:490:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:500:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
	"can-settings"!: _#defs."/definitions/efe85/full"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:511:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$"
	database!: matchN(1, [=~"^[a-zA-Z_][a-zA-Z0-9_]*$", =~"^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"])
	"can-fd-settings"!: _#defs."/definitions/7c619/full"
}
discriminate {0, 1, 2} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2}
	----- PATH database
	values:
	kinds:
		bool: {0, 1, 2}
		int: {0, 1, 2}
		float: {0, 1, 2}
		string: {0, 1, 2}
		list: {0, 1, 2}
		struct: {0, 1, 2}
		null: {0, 1, 2}
		bytes: {0, 1, 2}
	----- PATH can-settings
	values:
	kinds:
	----- PATH can-fd-settings
	values:
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH name {}; possible {0, 1, 2}
	----- PATH database {}; possible {0, 1, 2}
	----- PATH can-settings {0, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH can-fd-settings {0, 1}; possible {0, 2}
	it's possible!
} -> *cuediscrim.LeafNode
choose({0, 1, 2})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:765:9: _#defs."/definitions/66d5a/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:765:47: matchN(>=1, [=~"^.*\\.[vV][cC][dD][lL]$", =~"^.*\\.[vV][cC][oO][dD][mM]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:765:81: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:804:2: _#defs."/definitions/72fc8/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:804:27: matchN(>=1, [=~"^.*\\.[vV][mM][aA][pP]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:804:61: [...]
discriminate {0, 1} {
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:939:2: _#defs."/definitions/8b228/full"."file-path"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:939:27: matchN(>=1, [=~"^.*\\.[vV][sS][yY][sS][vV][aA][rR]$", =~"^.*\\.[xX][mM][lL]$", string & _#defs."/definitions/779cd/full"])
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:939:61: [...]
discriminate {0, 1} {
	kind bool: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind int: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind float: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind list: {0, 1}
	kind null: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind string: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind bytes: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
	kind struct: {0}
	discriminate {0} {
	} -> *cuediscrim.LeafNode
} -> *cuediscrim.KindSwitchNode
switch kind(.) {
case null:
	choose({0})
case bool:
	choose({0})
case int:
	choose({0})
case float:
	choose({0})
case string:
	choose({0})
case bytes:
	choose({0})
case list:
	choose({0, 1})
case struct:
	choose({0})
}

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1062:9: _#defs."/definitions/9d153/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1062:47: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	value!: bool | number | string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1068:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "int"
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1076:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "uint"
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1084:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "string" | "path"
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1094:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "bool"
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1104:5: {
	name!: =~"^[a-zA-Z_][a-zA-Z0-9_]*$" & matchN(0, [null | bool | number | =~"^[cC][aA][nN][oO][eE]_.*$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][nN][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[aA][sS][sS][eE][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][oO][oO][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[bB][rR][eE][aA][kK]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][aA][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][lL][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[cC][oO][nN][tT][iI][nN][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[dD][eE][lL][eE][tT][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[eE][xX][cC][eE][pP][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][aA][lL][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][iI][nN][aA][lL][lL][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][lL][oO][aA][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[fF][rR][oO][mM]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[gG][lL][oO][bB][aA][lL]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][mM][pP][oO][rR][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][nN][tT][eE][gG][eE][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[lL][oO][nN][gG]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][nN][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[nN][oO][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[pP][aA][sS][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][aA][iI][sS][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[rR][eE][tT][uU][rR][nN]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][eE][lL][fF]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][tT][rR][uU][cC][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[sS][wW][iI][tT][cC][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][hH][iI][sS]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][uU][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[tT][rR][yY]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][iI][nN][tT]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[uU][nN][sS][iI][gG][nN][eE][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[vV][oO][iI][dD]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][hH][iI][lL][eE]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[wW][iI][tT][hH]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[xX][oO][rR]$" | [...] | {}]) & matchN(0, [null | bool | number | =~"^[yY][iI][eE][lL][dD]$" | [...] | {}])
	type!: "float"
}
discriminate {0, 1, 2, 3, 4, 5} {
	----- PATH name
	values:
	kinds:
		string: {0, 1, 2, 3, 4, 5}
	----- PATH value
	values:
	kinds:
		string: {0}
		bool: {0}
		int: {0}
		float: {0}
	----- PATH type
	values:
		"string": {3}
		"path": {3}
		"bool": {4}
		"float": {5}
		"int": {1}
		"uint": {2}
	kinds:
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5}
	----- PATH name {}; possible {0, 1, 2, 3, 4, 5}
	----- PATH value {1, 2, 3, 4, 5}; possible {0, 1, 2, 3, 4, 5}
	it's possible!
	----- PATH type {0}; possible {1, 2, 3, 4, 5}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5})

/home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1305:9: _#defs."/definitions/b2008/local/ipv4-with-subnet"
0: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1305:65: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-mask"!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/venvironment-schema-v3.2.0.cue:1309:5: {
	address!: matchN(1, [=~"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])", string & _#defs."/definitions/779cd/full"])
	"subnet-prefix-length"!: matchN(1, [int & >=0 & <=32, _#defs."/definitions/779cd/full"])
}
discriminate {0, 1} {
	----- PATH address
	values:
	kinds:
		null: {0, 1}
		bool: {0, 1}
		bytes: {0, 1}
		list: {0, 1}
		int: {0, 1}
		float: {0, 1}
		string: {0, 1}
		struct: {0, 1}
	----- PATH subnet-mask
	values:
	kinds:
		null: {0}
		bool: {0}
		int: {0}
		float: {0}
		string: {0}
		bytes: {0}
		list: {0}
		struct: {0}
	----- PATH subnet-prefix-length
	values:
	kinds:
		float: {1}
		string: {1}
		bytes: {1}
		list: {1}
		struct: {1}
		null: {1}
		bool: {1}
		int: {1}
	no pure discriminator found; trying existence checks; selected {0, 1}
	----- PATH address {}; possible {0, 1}
	----- PATH subnet-mask {1}; possible {0, 1}
	it's possible!
	----- PATH subnet-prefix-length {0}; possible {1}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(subnet-mask) -> {1}
	notPresent(subnet-prefix-length) -> {0}
}

/home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v1.0.0.cue:45:9: _#defs."/definitions/75780/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v1.0.0.cue:45:47: {
	"capl-test-case"!: string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v1.0.0.cue:45:81: {
	"capl-test-sequence"!: string
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v1.0.0.cue:45:115: {
	"test-group"!: string
}
discriminate {0, 1, 2} {
	----- PATH capl-test-case
	values:
	kinds:
		string: {0}
	----- PATH capl-test-sequence
	values:
	kinds:
		string: {1}
	----- PATH test-group
	values:
	kinds:
		string: {2}
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH capl-test-case {1, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH capl-test-sequence {0, 2}; possible {1, 2}
	it's possible!
	----- PATH test-group {0, 1}; possible {2}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(capl-test-case) -> {1, 2}
	notPresent(capl-test-sequence) -> {0, 2}
	notPresent(test-group) -> {0, 1}
}

/home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.0.0.cue:38:9: _#defs."/definitions/742a2/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.0.0.cue:38:47: {
	"capl-test-case"!: string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.0.0.cue:38:81: {
	"capl-test-sequence"!: string
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.0.0.cue:38:115: {
	"test-fixture"!: string
}
discriminate {0, 1, 2} {
	----- PATH capl-test-case
	values:
	kinds:
		string: {0}
	----- PATH capl-test-sequence
	values:
	kinds:
		string: {1}
	----- PATH test-fixture
	values:
	kinds:
		string: {2}
	no pure discriminator found; trying existence checks; selected {0, 1, 2}
	----- PATH capl-test-case {1, 2}; possible {0, 1, 2}
	it's possible!
	----- PATH capl-test-sequence {0, 2}; possible {1, 2}
	it's possible!
	----- PATH test-fixture {0, 1}; possible {2}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(capl-test-case) -> {1, 2}
	notPresent(capl-test-sequence) -> {0, 2}
	notPresent(test-fixture) -> {0, 1}
}

/home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:9: _#defs."/definitions/7690e/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:47: {
	"capl-test-case"!: string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:81: {
	"capl-test-sequence"!: string
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:115: {
	"dotnet-test-case"!: string
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:149: {
	"dotnet-test-sequence"!: string
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:183: {
	"python-test-case"!: string
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:217: {
	"python-test-sequence"!: string
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.1.0.cue:100:251: {
	"test-fixture"!: string
}
discriminate {0, 1, 2, 3, 4, 5, 6} {
	----- PATH capl-test-case
	values:
	kinds:
		string: {0}
	----- PATH capl-test-sequence
	values:
	kinds:
		string: {1}
	----- PATH dotnet-test-case
	values:
	kinds:
		string: {2}
	----- PATH dotnet-test-sequence
	values:
	kinds:
		string: {3}
	----- PATH python-test-case
	values:
	kinds:
		string: {4}
	----- PATH python-test-sequence
	values:
	kinds:
		string: {5}
	----- PATH test-fixture
	values:
	kinds:
		string: {6}
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6}
	----- PATH capl-test-case {1, 2, 3, 4, 5, 6}; possible {0, 1, 2, 3, 4, 5, 6}
	it's possible!
	----- PATH capl-test-sequence {0, 2, 3, 4, 5, 6}; possible {1, 2, 3, 4, 5, 6}
	it's possible!
	----- PATH dotnet-test-case {0, 1, 3, 4, 5, 6}; possible {2, 3, 4, 5, 6}
	it's possible!
	----- PATH dotnet-test-sequence {0, 1, 2, 4, 5, 6}; possible {3, 4, 5, 6}
	it's possible!
	----- PATH python-test-case {0, 1, 2, 3, 5, 6}; possible {4, 5, 6}
	it's possible!
	----- PATH python-test-sequence {0, 1, 2, 3, 4, 6}; possible {5, 6}
	it's possible!
	----- PATH test-fixture {0, 1, 2, 3, 4, 5}; possible {6}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(capl-test-case) -> {1, 2, 3, 4, 5, 6}
	notPresent(capl-test-sequence) -> {0, 2, 3, 4, 5, 6}
	notPresent(dotnet-test-case) -> {0, 1, 3, 4, 5, 6}
	notPresent(dotnet-test-sequence) -> {0, 1, 2, 4, 5, 6}
	notPresent(python-test-case) -> {0, 1, 2, 3, 5, 6}
	notPresent(python-test-sequence) -> {0, 1, 2, 3, 4, 6}
	notPresent(test-fixture) -> {0, 1, 2, 3, 4, 5}
}

/home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:9: _#defs."/definitions/534ca/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:47: {
	"capl-test-case"!: string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:81: {
	"capl-test-sequence"!: string
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:115: {
	"dotnet-test-case"!: string
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:149: {
	"dotnet-test-sequence"!: string
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:183: {
	"python-test-case"!: string
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:217: {
	"python-test-sequence"!: string
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.2.0.cue:40:251: {
	"test-fixture"!: string
}
discriminate {0, 1, 2, 3, 4, 5, 6} {
	----- PATH capl-test-case
	values:
	kinds:
		string: {0}
	----- PATH capl-test-sequence
	values:
	kinds:
		string: {1}
	----- PATH dotnet-test-case
	values:
	kinds:
		string: {2}
	----- PATH dotnet-test-sequence
	values:
	kinds:
		string: {3}
	----- PATH python-test-case
	values:
	kinds:
		string: {4}
	----- PATH python-test-sequence
	values:
	kinds:
		string: {5}
	----- PATH test-fixture
	values:
	kinds:
		string: {6}
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6}
	----- PATH capl-test-case {1, 2, 3, 4, 5, 6}; possible {0, 1, 2, 3, 4, 5, 6}
	it's possible!
	----- PATH capl-test-sequence {0, 2, 3, 4, 5, 6}; possible {1, 2, 3, 4, 5, 6}
	it's possible!
	----- PATH dotnet-test-case {0, 1, 3, 4, 5, 6}; possible {2, 3, 4, 5, 6}
	it's possible!
	----- PATH dotnet-test-sequence {0, 1, 2, 4, 5, 6}; possible {3, 4, 5, 6}
	it's possible!
	----- PATH python-test-case {0, 1, 2, 3, 5, 6}; possible {4, 5, 6}
	it's possible!
	----- PATH python-test-sequence {0, 1, 2, 3, 4, 6}; possible {5, 6}
	it's possible!
	----- PATH test-fixture {0, 1, 2, 3, 4, 5}; possible {6}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(capl-test-case) -> {1, 2, 3, 4, 5, 6}
	notPresent(capl-test-sequence) -> {0, 2, 3, 4, 5, 6}
	notPresent(dotnet-test-case) -> {0, 1, 3, 4, 5, 6}
	notPresent(dotnet-test-sequence) -> {0, 1, 2, 4, 5, 6}
	notPresent(python-test-case) -> {0, 1, 2, 3, 5, 6}
	notPresent(python-test-sequence) -> {0, 1, 2, 3, 4, 6}
	notPresent(test-fixture) -> {0, 1, 2, 3, 4, 5}
}

/home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:9: _#defs."/definitions/21bc6/full"
0: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:47: {
	"capl-test-case"!: string
}
1: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:81: {
	"capl-test-case-list"!: string
	"param-values"!: [[...], ...[...]]
}
2: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:115: {
	"capl-test-sequence"!: string
}
3: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:149: {
	"capl-test-sequence-list"!: string
	"param-values"!: [[...], ...[...]]
}
4: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:183: {
	"dotnet-test-case"!: string
}
5: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:217: {
	"dotnet-test-case-list"!: string
	"param-values"!: [[...], ...[...]]
}
6: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:251: {
	"dotnet-test-sequence"!: string
}
7: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:285: {
	"dotnet-test-sequence-list"!: string
	"param-values"!: [[...], ...[...]]
}
8: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:319: {
	"python-test-case"!: string
}
9: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:353: {
	"python-test-case-list"!: string
	"param-values"!: [[...], ...[...]]
}
10: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:387: {
	"python-test-sequence"!: string
}
11: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:421: {
	"python-test-sequence-list"!: string
	"param-values"!: [[...], ...[...]]
}
12: /home/rogpeppe/other/schemastore/src/schemas/json/vtesttree-schema-v2.3.0.cue:25:455: {
	"test-fixture"!: string
}
discriminate {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12} {
	----- PATH capl-test-case
	values:
	kinds:
		string: {0}
	----- PATH capl-test-case-list
	values:
	kinds:
		string: {1}
	----- PATH param-values
	values:
	kinds:
		list: {1, 3, 5, 7, 9, 11}
	----- PATH capl-test-sequence
	values:
	kinds:
		string: {2}
	----- PATH capl-test-sequence-list
	values:
	kinds:
		string: {3}
	----- PATH dotnet-test-case
	values:
	kinds:
		string: {4}
	----- PATH dotnet-test-case-list
	values:
	kinds:
		string: {5}
	----- PATH dotnet-test-sequence
	values:
	kinds:
		string: {6}
	----- PATH dotnet-test-sequence-list
	values:
	kinds:
		string: {7}
	----- PATH python-test-case
	values:
	kinds:
		string: {8}
	----- PATH python-test-case-list
	values:
	kinds:
		string: {9}
	----- PATH python-test-sequence
	values:
	kinds:
		string: {10}
	----- PATH python-test-sequence-list
	values:
	kinds:
		string: {11}
	----- PATH test-fixture
	values:
	kinds:
		string: {12}
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	----- PATH capl-test-case {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; possible {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH capl-test-case-list {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; possible {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH param-values {0, 2, 4, 6, 8, 10, 12}; possible {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	----- PATH capl-test-sequence {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; possible {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH capl-test-sequence-list {0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12}; possible {3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH dotnet-test-case {0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12}; possible {4, 5, 6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH dotnet-test-case-list {0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12}; possible {5, 6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH dotnet-test-sequence {0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12}; possible {6, 7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH dotnet-test-sequence-list {0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}; possible {7, 8, 9, 10, 11, 12}
	it's possible!
	----- PATH python-test-case {0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12}; possible {8, 9, 10, 11, 12}
	it's possible!
	----- PATH python-test-case-list {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12}; possible {9, 10, 11, 12}
	it's possible!
	----- PATH python-test-sequence {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12}; possible {10, 11, 12}
	it's possible!
	----- PATH python-test-sequence-list {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12}; possible {11, 12}
	it's possible!
	----- PATH test-fixture {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; possible {12}
	it's possible!
} -> *cuediscrim.FieldAbsenceNode
allOf {
	notPresent(capl-test-case) -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	notPresent(capl-test-case-list) -> {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	notPresent(capl-test-sequence) -> {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	notPresent(capl-test-sequence-list) -> {0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	notPresent(dotnet-test-case) -> {0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12}
	notPresent(dotnet-test-case-list) -> {0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12}
	notPresent(dotnet-test-sequence) -> {0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12}
	notPresent(dotnet-test-sequence-list) -> {0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}
	notPresent(python-test-case) -> {0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12}
	notPresent(python-test-case-list) -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12}
	notPresent(python-test-sequence) -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12}
	notPresent(python-test-sequence-list) -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12}
	notPresent(test-fixture) -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
}

/home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:1: orientation
0: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:26: _
1: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:29: _
2: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:32: _
3: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:35: _
4: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:38: _
5: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:41: _
6: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:44: _
7: /home/rogpeppe/other/schemastore/src/schemas/json/web-manifest.cue:33:47: _
discriminate {0, 1, 2, 3, 4, 5, 6, 7} {
	no pure discriminator found; trying existence checks; selected {0, 1, 2, 3, 4, 5, 6, 7}
} -> *cuediscrim.LeafNode
choose({0, 1, 2, 3, 4, 5, 6, 7})
